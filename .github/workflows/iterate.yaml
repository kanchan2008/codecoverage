name: manifests

on:
  push:
    branches:
      - main  # or any other branch you want to monitor for pushes
  pull_request:
    branches:
      - main  # or any other branch for PR triggers
  workflow_dispatch:  # Allow manual triggering of the workflow
    inputs:
      environment:
        description: 'The environment to deploy to (default is prod)'
        required: false
        default: 'prod'

jobs:
  list-files:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - id: set-matrix
        run: |
          # Create a list of changed files and output it in JSON format
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | jq -R -s -c 'split("\n")[:-1]')
          
          # Check if there are no changed files
          if [ -z "$CHANGED_FILES" ]; then
            echo "No changed files detected, defaulting to test.sql"
            # Default to test.sql if no files are changed
            echo "matrix=[\"test.sql\"]" >> $GITHUB_OUTPUT
          else
            echo "matrix=$CHANGED_FILES" >> $GITHUB_OUTPUT
          fi
          
  apply-sql:
    needs: list-files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        manifest: ${{ fromJson(needs.list-files.outputs.matrix) }}
    environment: ${{ github.event.inputs.environment || 'prod' }}  # Default to 'prod' if not provided
    steps:
      - uses: actions/checkout@v3
      
      # Apply SQL for Development Environment
      - name: Apply SQL for Development Environment
        if: ${{ github.event.inputs.environment == 'dev' }}
        run: |
          echo "Applying SQL for file: ${{ matrix.manifest }} in environment: dev"
          # Here you can add your commands for applying SQL to dev environment
          # Example: psql -h $DEV_DB_HOST -U $DEV_DB_USER -d $DEV_DB_NAME -f ${{ matrix.manifest }}
      
      # Apply SQL for Production Environment
      - name: Apply SQL for Production Environment
        if: ${{ github.event.inputs.environment == 'prod' }}
        run: |
          echo "Applying SQL for file: ${{ matrix.manifest }} in environment: prod"
          # Here you can add your commands for applying SQL to prod environment
          # Example: psql -h $PROD_DB_HOST -U $PROD_DB_USER -d $PROD_DB_NAME -f ${{ matrix.manifest }}
